import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { pool } from "@/lib/pg";
import TableSelector from "./TableSelector";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  async function getTables(): Promise<{ table_name: string }[]> {
    const schema = process.env.SCHEMA_NAME as string;

    const result = await pool.query("select table_name from information_schema.tables where table_schema = $1", [schema]);

    return result.rows;
  }

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <header className="container mx-auto py-4 flex items-center gap-2">
          Таблица:
          <TableSelector tables={await getTables()} />
        </header>
        {children}
      </body>
    </html>
  );
}
